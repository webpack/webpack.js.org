"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4859],{4859:function(e,s,n){n.r(s),n.d(s,{default:function(){return r}});var i=n(2540),t=n(3317);function o(e){const s={a:"a",aside:"aside",em:"em",h6:"h6",p:"p",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["Any time one file depends on another, webpack treats this as a ",(0,i.jsx)(s.em,{children:"dependency"}),". This allows webpack to take non-code assets, such as images or web fonts, and also provide them as ",(0,i.jsx)(s.em,{children:"dependencies"})," for your application."]}),"\n",(0,i.jsxs)(s.p,{children:["When webpack processes your application, it starts from a list of modules defined on the command line or in its configuration file.\nStarting from these ",(0,i.jsx)(s.a,{href:"/concepts/entry-points/",children:(0,i.jsx)(s.em,{children:"entry points"})}),", webpack recursively builds a ",(0,i.jsx)(s.em,{children:"dependency graph"})," that includes every module your application needs, then bundles all of those modules into a small number of ",(0,i.jsx)(s.em,{children:"bundles"})," - often, only one - to be loaded by the browser."]}),"\n",(0,i.jsxs)(s.aside,{className:"tip",children:[(0,i.jsx)(s.h6,{className:"tip__prefix",children:"tip"}),(0,i.jsxs)(s.p,{children:["Bundling your application is especially powerful for ",(0,i.jsx)(s.em,{children:"HTTP/1.1"})," clients, as it minimizes the number of times your app has to wait while the browser starts a new request. For ",(0,i.jsx)(s.em,{children:"HTTP/2"}),", you can also use ",(0,i.jsx)(s.a,{href:"/guides/code-splitting/",children:"Code Splitting"})," to achieve best results."]})]})]})}function r(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);